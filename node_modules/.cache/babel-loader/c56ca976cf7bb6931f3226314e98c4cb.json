{"ast":null,"code":"var _jsxFileName = \"/Users/shoyayarimizu/Project/redux-hooks-sample/src/Counter.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increment, decrement } from \"./Store\";\nexport default function Counter(props) {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.initData.count);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"count\\uFF1A\", counter), React.createElement(\"button\", {\n    onClick: dispatch(increment()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"increment\"), React.createElement(\"button\", {\n    onClick: dispatch(decrement()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"decrement\"));\n}","map":{"version":3,"sources":["/Users/shoyayarimizu/Project/redux-hooks-sample/src/Counter.js"],"names":["React","useDispatch","useSelector","increment","decrement","Counter","props","dispatch","counter","state","initData","count"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,SAArC;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,KAAzB,CAA3B;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYH,OAAZ,CADF,EAEE;AAAQ,IAAA,OAAO,EAAED,QAAQ,CAACJ,SAAS,EAAV,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAQ,IAAA,OAAO,EAAEI,QAAQ,CAACH,SAAS,EAAV,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF;AAOD","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increment, decrement } from \"./Store\";\n\nexport default function Counter(props) {\n  const dispatch = useDispatch();\n\n  const counter = useSelector(state => state.initData.count);\n\n  return (\n    <div>\n      <div>countï¼š{counter}</div>\n      <button onClick={dispatch(increment())}>increment</button>\n      <button onClick={dispatch(decrement())}>decrement</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}