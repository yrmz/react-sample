{"ast":null,"code":"const initialState = {\n  count: 0\n};\nexport const INCREMENT_ASYNC = \"INCREMENT_ASYNC\";\nexport const DECREMENT_ASYNC = \"DECREMENT_ASYNC\"; // リデューサー\n\nexport default function Reducer(state = initialState, action) {\n  switch (action.type) {\n    case INCREMENT:\n      return incrementReduce(state, action);\n\n    case DECREMENT:\n      return decrementReduce(state, action);\n\n    default:\n      return state;\n  }\n}\n;\n\nconst incrementReduce = (state, action) => {\n  const _state = Object.assign({}, state);\n\n  _state.count++;\n  return _state;\n};\n\nconst decrementReduce = (state, action) => {\n  const _state = Object.assign({}, state);\n\n  _state.count--;\n  return _state;\n}; //アクションクリエーター\n\n\nexport const actionIncrement = props => {\n  return {\n    type: INCREMENT\n  };\n};\nexport const actionDecrement = props => {\n  return {\n    type: DECREMENT\n  };\n};\nexport const actionIncrementAsync = props => {\n  return {\n    type: INCREMENT_ASYNC\n  };\n};\nexport const actionDecrementAsync = props => {\n  return {\n    type: DECREMENT_ASYNC\n  };\n};","map":{"version":3,"sources":["/Users/shoyayarimizu/Project/redux-hooks-sample/src/store/counterAsync.js"],"names":["initialState","count","INCREMENT_ASYNC","DECREMENT_ASYNC","Reducer","state","action","type","INCREMENT","incrementReduce","DECREMENT","decrementReduce","_state","Object","assign","actionIncrement","props","actionDecrement","actionIncrementAsync","actionDecrementAsync"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB,C,CAEP;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGL,YAAzB,EAAuCM,MAAvC,EAA+C;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,SAAL;AACE,aAAOC,eAAe,CAACJ,KAAD,EAAQC,MAAR,CAAtB;;AACF,SAAKI,SAAL;AACE,aAAOC,eAAe,CAACN,KAAD,EAAQC,MAAR,CAAtB;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD;AAAA;;AAED,MAAMI,eAAe,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACzC,QAAMM,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,CAAf;;AACAO,EAAAA,MAAM,CAACX,KAAP;AAEA,SAAOW,MAAP;AACD,CALD;;AAOA,MAAMD,eAAe,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACzC,QAAMM,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,CAAf;;AACAO,EAAAA,MAAM,CAACX,KAAP;AAEA,SAAOW,MAAP;AACD,CALD,C,CAOA;;;AACA,OAAO,MAAMG,eAAe,GAAGC,KAAK,IAAI;AACtC,SAAO;AACLT,IAAAA,IAAI,EAAEC;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMS,eAAe,GAAGD,KAAK,IAAI;AACtC,SAAO;AACLT,IAAAA,IAAI,EAAEG;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMQ,oBAAoB,GAAGF,KAAK,IAAI;AAC3C,SAAO;AACLT,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMiB,oBAAoB,GAAGH,KAAK,IAAI;AAC3C,SAAO;AACLT,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJM","sourcesContent":["const initialState = {\n  count: 0\n};\n\nexport const INCREMENT_ASYNC = \"INCREMENT_ASYNC\";\nexport const DECREMENT_ASYNC = \"DECREMENT_ASYNC\";\n\n// リデューサー\nexport default function Reducer(state = initialState, action) {\n  switch (action.type) {\n    case INCREMENT:\n      return incrementReduce(state, action);\n    case DECREMENT:\n      return decrementReduce(state, action);\n    default:\n      return state;\n  }\n};\n\nconst incrementReduce = (state, action) => {\n  const _state = Object.assign({}, state);\n  _state.count++;\n\n  return _state;\n};\n\nconst decrementReduce = (state, action) => {\n  const _state = Object.assign({}, state);\n  _state.count--;\n\n  return _state;\n};\n\n//アクションクリエーター\nexport const actionIncrement = props => {\n  return {\n    type: INCREMENT\n  };\n};\n\nexport const actionDecrement = props => {\n  return {\n    type: DECREMENT\n  };\n};\n\nexport const actionIncrementAsync = props => {\n  return {\n    type: INCREMENT_ASYNC\n  };\n};\n\nexport const actionDecrementAsync = props => {\n  return {\n    type: DECREMENT_ASYNC\n  };\n};\n"]},"metadata":{},"sourceType":"module"}