{"ast":null,"code":"import * as Types from \"../types/counter\";\nconst initialState = {\n  count: 0\n}; // リデューサー\n\nexport default function Reducer(state = initialState, action) {\n  switch (action.type) {\n    case Types.INCREMENT:\n      return incrementReduce(state, action);\n\n    case Types.DECREMENT:\n      return decrementReduce(state, action);\n\n    default:\n      return state;\n  }\n}\n;\n\nconst incrementReduce = (state, action) => {\n  const _state = Object.assign({}, state);\n\n  _state.count++;\n  return _state;\n};\n\nconst decrementReduce = (state, action) => {\n  const _state = Object.assign({}, state);\n\n  _state.count--;\n  return _state;\n};","map":{"version":3,"sources":["/Users/shoyayarimizu/Project/react-sample/src/store/reducers/counter.js"],"names":["Types","initialState","count","Reducer","state","action","type","INCREMENT","incrementReduce","DECREMENT","decrementReduce","_state","Object","assign"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB,C,CAIA;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGH,YAAzB,EAAuCI,MAAvC,EAA+C;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,SAAX;AACE,aAAOC,eAAe,CAACJ,KAAD,EAAQC,MAAR,CAAtB;;AACF,SAAKL,KAAK,CAACS,SAAX;AACE,aAAOC,eAAe,CAACN,KAAD,EAAQC,MAAR,CAAtB;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD;AAAA;;AAED,MAAMI,eAAe,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACzC,QAAMM,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,CAAf;;AACAO,EAAAA,MAAM,CAACT,KAAP;AAEA,SAAOS,MAAP;AACD,CALD;;AAOA,MAAMD,eAAe,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACzC,QAAMM,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,CAAf;;AACAO,EAAAA,MAAM,CAACT,KAAP;AAEA,SAAOS,MAAP;AACD,CALD","sourcesContent":["import * as Types from \"../types/counter\";\n\nconst initialState = {\n  count: 0\n};\n\n// リデューサー\nexport default function Reducer(state = initialState, action) {\n  switch (action.type) {\n    case Types.INCREMENT:\n      return incrementReduce(state, action);\n    case Types.DECREMENT:\n      return decrementReduce(state, action);\n    default:\n      return state;\n  }\n};\n\nconst incrementReduce = (state, action) => {\n  const _state = Object.assign({}, state);\n  _state.count++;\n\n  return _state;\n};\n\nconst decrementReduce = (state, action) => {\n  const _state = Object.assign({}, state);\n  _state.count--;\n\n  return _state;\n};"]},"metadata":{},"sourceType":"module"}